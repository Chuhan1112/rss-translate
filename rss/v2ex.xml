<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>V2EX</title><link>https://www.v2ex.com/</link><description>way to explore</description><lastBuildDate>Thu, 14 Dec 2023 18:49:51 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>[Apple] 想知道闲鱼上带激活锁的机器都是怎么来的</title><link>https://www.v2ex.com/t/1000531#reply0</link><description>&lt;p&gt;最近想买一个 m1 的 mac 电脑，发现很多 3000 左右的电脑都是带激活锁的，不能进桌面。这种比正常的电脑要便宜 1000 多，问了几个卖家都说密码忘了。好像是 appleid 的密码只要手机号就能找回？不理解为什么会带着锁卖，而且还有很多带锁的 iphone 和 ipad ，价格都很便宜。如果是偷来的应该不会有这么大的量吧&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 17:32:37 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000531#reply0</guid></item><item><title>[Bing] 如何解决挂梯搜索 bing 时跳转中国/显示未找到结果的问题</title><link>https://www.v2ex.com/t/1000530#reply0</link><description>备选方案 1：调整规则，直连 bing&lt;br /&gt;&lt;br /&gt;问题：无法访问 newbing&lt;br /&gt;&lt;br /&gt;备选方案 2：全面使用 google&lt;br /&gt;&lt;br /&gt;问题：我也有不想打开梯子的场合&lt;br /&gt;&lt;br /&gt;备选方案 3：使用一个稳定的美国节点，防止 bing 跳转&lt;br /&gt;&lt;br /&gt;问题：我手上的梯子订阅无法满足这一点，得加钱&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;请问还有什么办法吗</description><pubDate>Thu, 14 Dec 2023 17:25:00 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000530#reply0</guid></item><item><title>[问与答] 阿里云是不是又有点小问题了</title><link>https://www.v2ex.com/t/1000529#reply0</link><description>1 点多时候网页和 app 扫码都登不上去</description><pubDate>Thu, 14 Dec 2023 17:23:43 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000529#reply0</guid></item><item><title>[Apple] ios17.2 apple music 貌似可以另外登录共享账号</title><link>https://www.v2ex.com/t/1000528#reply1</link><description>&lt;p&gt;设置-音乐-拉到最低就会看到一个家庭共享选项，由于我自己没有加入家庭的账号，所以试不了&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 17:16:18 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000528#reply1</guid></item><item><title>[iCloud] deleted</title><link>https://www.v2ex.com/t/1000527#reply0</link><description></description><pubDate>Thu, 14 Dec 2023 17:06:06 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000527#reply0</guid></item><item><title>[WireGuard] 免费 WireGuard 节点</title><link>https://www.v2ex.com/t/1000526#reply0</link><description>地点最好在欧盟成员国境内&lt;br /&gt;&lt;br /&gt;注:免费试用的话最好 1 年</description><pubDate>Thu, 14 Dec 2023 16:58:50 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000526#reply0</guid></item><item><title>[分享发现] 我去， GPT4.5 要来了</title><link>https://www.v2ex.com/t/1000525#reply3</link><description>&lt;p&gt;黏贴不了图片&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 16:42:59 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000525#reply3</guid></item><item><title>[Go 编程语言] 写了一个 ssh 客户端，欢迎体验</title><link>https://www.v2ex.com/t/1000524#reply4</link><description>&lt;h2&gt;需求来源&lt;/h2&gt;
&lt;p&gt;对于一个后端程序员来说，在工作中免不了要和繁杂的服务器打交道，ssh 是不可或缺的开发工具。但每次登录都需要输入密码的行为，对于认为一切皆可自动化的程序员来说，肯定是有点繁琐的（如果您是使用图形化界面的用户可忽略）。&lt;/p&gt;
&lt;p&gt;所以我在前段时间考虑，我应该自己实现一个 ssh 客户端，它不需要拥有许多复杂的功能，只需要满足我以下这几个需求即可满足日常使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和 ssh 保持差不多的使用习惯&lt;/li&gt;
&lt;li&gt;仅在第一次登录时询问我密码，后续使用无需再提供密码&lt;/li&gt;
&lt;li&gt;可以给服务器它任意的标签，这样我就可以自由地通过 IP 或者标签来登录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是乎，近期我在业余时间就设计并编写了 &lt;a href="https://github.com/vimiix/ssx" rel="nofollow"&gt;ssx&lt;/a&gt; 这个轻量级的具有记忆的 ssh 客户端。它完美的实现了上面我所需要的功能，也已经被我愉快的应用到了日常的开发中。&lt;/p&gt;
&lt;p&gt;项目源码地址：&lt;a href="https://github.com/vimiix/ssx" rel="nofollow"&gt;https://github.com/vimiix/ssx&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;使用方式&lt;/h2&gt;
&lt;p&gt;下面就简单介绍一下 ssx 的使用方式。&lt;/p&gt;
&lt;p&gt;ssx 是通过  golang 开发的一个独立的二进制文件，安装方式就是从 &lt;a href="https://github.com/vimiix/ssx/releases" rel="nofollow"&gt;release&lt;/a&gt; 页面下载对应平台的软件包，解压后把 ssx 二进制放到系统的任意目录下，这里我习惯放到 &lt;code&gt;/usr/local/bin&lt;/code&gt; 目录下，如果你选择其他目录下，需要确保存放的目录添加到 $PATH 环境变量中，这样后续使用我们就不用再添加路径前缀，直接通过 ssx 命令就可以运行了。&lt;/p&gt;
&lt;h3&gt;登录服务器&lt;/h3&gt;
&lt;p&gt;使用  ssx 登录服务器的时候，基本和  ssh 使用习惯一致，下面是基本命令模式：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;ssx [-s] [USER@]HOST[:PORT] [-k IDENTITY_FILE]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在这个命令中，&lt;code&gt;USER&lt;/code&gt; 是可以省略的，如果省略则是系统当前用户名；&lt;code&gt;PORT&lt;/code&gt; 是可以省略的，默认是 22 ，&lt;code&gt;-k IDENTITY_FILE&lt;/code&gt; 代表如果是使用私钥登录，则通过 &lt;code&gt;-k&lt;/code&gt; 来指定私钥的路径，也是可以省略的，默认是 &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;，当然了，前提是这个文件存在。所以最精简的登录命令就是：&lt;code&gt;ssx &amp;lt;ip&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当首次登录，不存在可用私钥时，会通过交互方式来让用户输入密码，一旦登录成功，这个密码就会被 ssx 保存到本地的数据文件中 (默认为 &lt;code&gt;~/.ssx/db&lt;/code&gt;， 可通过环境变量 &lt;code&gt;SSX_DB_PATH&lt;/code&gt; 进行自定义)，下次登录时，仍然执行 &lt;code&gt;ssx &amp;lt;ip&amp;gt;&lt;/code&gt; 即可自动登录。&lt;/p&gt;
&lt;p&gt;注意，登录过的服务器，再次登录时，我嫌输入全部 IP 比较麻烦，所以 ssx 支持输入 IP 中的部分字符，自动搜索匹配进行登录。&lt;/p&gt;
&lt;h3&gt;为服务器打标签&lt;/h3&gt;
&lt;p&gt;当我们成功登录过一次服务器后，就可以通过 &lt;code&gt;ssx list&lt;/code&gt; 命令来查看目前 ssx 存储的所有服务器列表。下面是一个列表示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# output example
# Entries (stored in ssx)
#  ID |       Address        |          Tags
#-----+----------------------+--------------------------
#  1  | root@172.23.1.84:22  | centos
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ssx 会给每个服务器分配一个唯一的 ID ，我们在打标签时就需要通过 ID 来指定服务器条目。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然，既然服务器有唯一 ID ，ssx 也支持通过 ID 来进行登录：&lt;code&gt;ssx -i &amp;lt;ID&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打标签需要通过  ssx 的子命令 &lt;code&gt;tag&lt;/code&gt; 来完成，下面是 tag 命令的模式：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;ssx tag -i &amp;lt;ENTRY_ID&amp;gt; [-t TAG1 [-t TAG2 ...]] [-d TAG3 [-d TAG4 ...]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 指定 list 命令输出的要操作的服务器对应的 ID 字段&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; 指定要添加的标签名，可以多次指定就可以同时添加多个标签&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; 指定要删除的标签名，同样也可以多次指定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当我们完成对服务器的打标签后，比如上面示例中的服务器，我增加了一个 &lt;code&gt;centos&lt;/code&gt; 的标签，那么我此时就可以通过标签来进行登录了：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;// -t 可省略
ssx [-t] centos
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;删除服务器记录&lt;/h3&gt;
&lt;p&gt;ssx 也支持删除服务器记录，命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;ssx delete -i &amp;lt;ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一旦删除，ssx 不会保留该服务器的任何信息，所以下次登录时会等同于新的服务器来对待，ID 也会重新生成。&lt;/p&gt;
&lt;h3&gt;目前支持的环境变量&lt;/h3&gt;
&lt;p&gt;除了上面提到的 &lt;code&gt;SSX_DB_PATH&lt;/code&gt; 可以指定存储数据的文件外，ssx 还支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SSX_CONNECT_TIMEOUT&lt;/code&gt;：SSH 连接超时时间，默认为 &lt;code&gt;10s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SSX_IMPORT_SSH_CONFIG&lt;/code&gt;：是否引用用户 ssh 配置，默认为空&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里我解释一下 &lt;code&gt;SSX_IMPORT_SSH_CONFIG&lt;/code&gt; 的作用，这个环境变量不设置时，ssx 默认是不会读取用户的 &lt;code&gt;~/.ssh/config&lt;/code&gt; 文件的，ssx 只使用自己存储文件进行检索。如果将这个环境变量设置为非空（任意字符串），ssx 就会在初始化的时候加载用户 ssh 配置文件中存在的服务器条目，&lt;strong&gt;但 ssx 仅读取用于检索和登录，并不会将这些条目持久化到 ssx 的存储文件中&lt;/strong&gt;，所以，如果 ssx IP 登录时，这个 IP 是 &lt;code&gt;~/.ssh/config&lt;/code&gt; 文件中已经配置过登录验证方式的服务器，ssx 匹配到就直接登录了。但 &lt;code&gt;ssx list&lt;/code&gt; 查看时，该服务器会被显示到 &lt;code&gt;found in ssh config&lt;/code&gt; 的表格中，这个表格中的条目是不具有 ID 属性的，以下是一个示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;export SSX_IMPORT_SSH_CONFIG=true
ssx list
# output example
# Entries (stored in ssx)
#  ID |       Address        |          Tags
#-----+----------------------+--------------------------
#  1  | root@172.23.1.84:22  | centos
#
# Entries (found in ssh config)
#               Address              |           Tags
# -----------------------------------+----------------------------
#   git@ssh.github.com:22            | github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;操作演示&lt;/h3&gt;
&lt;p&gt;最后通过一个演示动画来感受一下这个小可爱的功能吧。&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo" class="embedded_image" rel="noreferrer" src="https://raw.githubusercontent.com/vimiix/ssx/master/static/demo.svg?sanitize=true" /&gt;&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 16:24:33 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000524#reply4</guid></item><item><title>[分享创造] AI 简历评价器，现在也支持中文版</title><link>https://www.v2ex.com/t/1000523#reply1</link><description>&lt;p&gt;先上链接： &lt;a href="https://www.recruitment-copilot.com/" rel="nofollow"&gt;https://www.recruitment-copilot.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然，英文版简历一如既往地支持。界面仍然是英文的，不过不要紧，上传中文简历，就会收获中文评价&lt;/p&gt;
&lt;p&gt;上传简历后，会收到整体评价和打分、缺点、优点，可能的面试问题，以及薪资的预估&lt;/p&gt;
&lt;p&gt;下面是一个例子（具体项目信息做了特殊处理）：&lt;/p&gt;
&lt;h3&gt;整体评价：&lt;/h3&gt;
&lt;p&gt;85/100 候选人简历清晰明了，重点突出，展现出扎实的技术功底和丰富的项目经验。&lt;/p&gt;
&lt;h3&gt;总结：&lt;/h3&gt;
&lt;p&gt;候选人具备扎实的后端开发能力和丰富的数据库研发经验，擅长分布式系统和数据库，并在开源社区和个人项目中有不俗表现。&lt;/p&gt;
&lt;h3&gt;缺点：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;缺乏个人简历摘要或自我介绍，简历开头需要再加入一段自我概括，突出个人亮点和职业目标。例如：技术驱动的后端开发者，擅长分布式数据库研发与调优，具备丰富的项目经验和开源贡献。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;教育经历未突出成绩或荣誉，可以添加 GPA 和奖学金等信息。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作经历中最好加入项目成果和影响，具体说明自己在项目中取得的成就，以及对现有业务或团队的贡献。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;个人项目可以进一步突出项目的难点、解决方案和成果，以及对自己技术能力和创新能力的展示。例如，可以在项目描述中添加使用的技术栈、解决了什么具体问题，取得了怎样的成果和影响。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;优点：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;具备扎实的技术功底，包括编程语言、分布式系统/数据库、开发工具等方面的知识和经验。 打磨简历建议：在简历中突出自己的独特技能，可以在“技能”部分中使用技能标签将自己擅长的技术方向突出，例如 "擅长 Golang/Rust/Python" 等。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在开源贡献和个人项目中展现出积极性和学习能力。 打磨简历建议：在个人项目和开源贡献中加入自己的具体贡献，例如解决了哪些难题、代码的影响等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;面试问题：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;您在 TT 调度组件 OO 的研发工作中，遇到过哪些技术难点，您是如何解决的？ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请分享一次在懂车帝 App 垂直业务相关的后端研发中的成功经验，以及您的贡献和影响。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;您在个人项目中获得的 Hackathon YYYY 三等奖，能分享一下背后的技术亮点和创新之处吗？ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;您在分布式系统/数据库领域有丰富经验，方便分享一下您对 ZZ 和 Raft 算法的理解和应用实践吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;您在开源项目贡献中提到为多个知名开源项目组织贡献过代码，能具体分享一下您的贡献和影响吗？ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请描述一次您在工作中面临的技术挑战以及您如何克服它的经历。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;您在个人博客上坚持写作，可以分享一下您认为最有价值的一篇技术分享文章吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;您提到自己有使用遗传算法解决过 XX 问题的经验，请分享一下具体的解决方案和效果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;预估薪水：&lt;/h3&gt;
&lt;p&gt;中国大陆一线城市：25k-35k RMB/月 中国大陆二线城市：15k-25k RMB/月 北美：90k-120k USD/年&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 16:11:22 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000523#reply1</guid></item><item><title>[魅族] Root 相关</title><link>https://www.v2ex.com/t/1000522#reply0</link><description>1.能不能在不刷机的情况下关闭 Root&lt;br /&gt;2.能不能在有 Root 情况下更新系统&lt;br /&gt;&lt;br /&gt;注:关闭 Root 总是有点麻烦,需要备份软件以及配置&lt;br /&gt;注 2:开启 Root 容易,关闭复杂</description><pubDate>Thu, 14 Dec 2023 16:06:07 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000522#reply0</guid></item><item><title>[分享发现] 生成你的 2023GitHub 总结视频</title><link>https://www.v2ex.com/t/1000521#reply1</link><description>&lt;a href="https://githubunwrapped.com" rel="nofollow noopener" target="_blank"&gt;https://githubunwrapped.com&lt;/a&gt;</description><pubDate>Thu, 14 Dec 2023 15:53:02 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000521#reply1</guid></item><item><title>[NAS] 关于 fio 延迟指标的选择和计算</title><link>https://www.v2ex.com/t/1000519#reply0</link><description>&lt;p&gt;是这样的，我写了 fio 测试脚本，然后有观众提议放个读写延迟上去。我现在有点纠结应该放哪个数值.
我打算取"lat_ns"的"mean" 也就是值 2718863.941184 。 不知道这个是否合理？ 这个值我要不要再除以 11292449 ？有点噶住了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
      "jobname" : "read,RND4K-Q32T16",
      "groupid" : 10,
      "error" : 0,
      "eta" : 0,
      "elapsed" : 786,
      "job options" : {
        "name" : "read,RND4K-Q32T16",
        "rw" : "randread",
        "iodepth" : "32",
        "bs" : "4k",
        "numjobs" : "16"
      },
      "read" : {
        "io_bytes" : 46253879296,
        "io_kbytes" : 45169804,
        "bw_bytes" : 770782370,
        "bw" : 752717,
        "iops" : 188170.991018,
        "runtime" : 60009,
        "total_ios" : 11291953,
        "short_ios" : 0,
        "drop_ios" : 0,
        "slat_ns" : {
          "min" : 1780,
          "max" : 19582823,
          "mean" : 11969.273414,
          "stddev" : 18417.052843,
          "N" : 11291955
        },
        "clat_ns" : {
          "min" : 74196,
          "max" : 35534486,
          "mean" : 2706894.667020,
          "stddev" : 1860837.645574,
          "N" : 11292449,
          "percentile" : {
            "1.000000" : 522240,
            "5.000000" : 716800,
            "10.000000" : 888832,
            "20.000000" : 1187840,
            "30.000000" : 1499136,
            "40.000000" : 1843200,
            "50.000000" : 2211840,
            "60.000000" : 2670592,
            "70.000000" : 3194880,
            "80.000000" : 3948544,
            "90.000000" : 5210112,
            "95.000000" : 6520832,
            "99.000000" : 8847360,
            "99.500000" : 9633792,
            "99.900000" : 11730944,
            "99.950000" : 13565952,
            "99.990000" : 20578304
          }
        },
        "lat_ns" : {
          "min" : 228921,
          "max" : 35536822,
          "mean" : 2718863.941184,
          "stddev" : 1860842.689662,
          "N" : 11292449
        },
        "bw_min" : 697879,
        "bw_max" : 810166,
        "bw_agg" : 100.000000,
        "bw_mean" : 753568.975000,
        "bw_dev" : 1207.788641,
        "bw_samples" : 1920,
        "iops_min" : 174463,
        "iops_max" : 202538,
        "iops_mean" : 188389.150000,
        "iops_stddev" : 301.956112,
        "iops_samples" : 1920
      },
      。。。。。
    },
&lt;/code&gt;&lt;/pre&gt;</description><pubDate>Thu, 14 Dec 2023 15:35:48 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000519#reply0</guid></item><item><title>[问与答] 更新后， Win11 上编译 C++常用库被 Defender 报毒</title><link>https://www.v2ex.com/t/1000517#reply1</link><description>&lt;p&gt;各位 V 友帮我看看是我中病毒了还是确实是误报&lt;/p&gt;
&lt;p&gt;在今天更新完系统后，包括 opencv, zlib, eigen 在内的库均无法编译，全被 Defender 拦截了&lt;/p&gt;
&lt;p&gt;下面是以我编译 zlib-1.3 为例&lt;/p&gt;
&lt;h3&gt;Environment&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MinGW 11.2.0&lt;/li&gt;
&lt;li&gt;CMake 3.24.2&lt;/li&gt;
&lt;li&gt;Windows 11 (23H2, 22631.2861)&lt;/li&gt;
&lt;li&gt;Security intelligence version(Defender): 1.403.485.0 (last update 2023.12.14)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Library&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.zlib.net/" rel="nofollow"&gt;zlib-1.3&lt;/a&gt;( &lt;a href="https://www.zlib.net/zlib13.zip" rel="nofollow"&gt;https://www.zlib.net/zlib13.zip&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sig"&gt;SHA-256
c561d09347f674f0d72692e7c75d9898919326c532aab7f8c07bb43b07efeb38
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Command&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;C:/Qt/Tools/CMake_64/bin/cmake.exe -G "MinGW Makefiles" -D CMAKE_C_COMPILER=gcc -D CMAKE_CXX_COMPILER=g++ -D CMAKE_C_FLAGS_DEBUG=-O3 -D CMAKE_C_FLAGS_RELEASE=-O3 -D CMAKE_CXX_FLAGS_DEBUG=-O3 -D CMAKE_CXX_FLAGS_RELEASE=-O3 -D CMAKE_BUILD_TYPE=Debug -D CMAKE_PREFIX_PATH="C:/Work/dep/MinGW11.2.0/Debug;${CMAKE_PREFIX_PATH}" -D CMAKE_INSTALL_PREFIX="C:/Work/dep/MinGW11.2.0/Debug/zlib-1.3" -B . -S ..
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;C:/Qt/Tools/CMake_64/bin/cmake.exe --build .
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;C:/Qt/Tools/CMake_64/bin/cmake.exe --install .
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Generator&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;"MinGW Makefiles"&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Variables&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CMAKE_C_COMPILER=gcc&lt;/li&gt;
&lt;li&gt;CMAKE_CXX_COMPILER=g++&lt;/li&gt;
&lt;li&gt;CMAKE_C_FLAGS_DEBUG=-O3&lt;/li&gt;
&lt;li&gt;CMAKE_C_FLAGS_RELEASE=-O3&lt;/li&gt;
&lt;li&gt;CMAKE_CXX_FLAGS_DEBUG=-O3&lt;/li&gt;
&lt;li&gt;CMAKE_CXX_FLAGS_RELEASE=-O3&lt;/li&gt;
&lt;li&gt;CMAKE_BUILD_TYPE=Debug&lt;/li&gt;
&lt;li&gt;CMAKE_PREFIX_PATH=C:/Work/dep/MinGW11.2.0/Debug;${CMAKE_PREFIX_PATH}&lt;/li&gt;
&lt;li&gt;CMAKE_INSTALL_PREFIX=C:/Work/dep/MinGW11.2.0/Debug/zlib-1.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Windows Defender&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Trojan:Win32/Tiggre!pz&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-txt"&gt;file: C:\Work\tmp\pack\zlib-1.3\build_zlib_1.3_MinGW11.2.0_Debug\CMakeFiles\CMakeTmp\cmTC_0772b.exe
file: C:\Work\tmp\pack\zlib-1.3\build_zlib_1.3_MinGW11.2.0_Debug\CMakeFiles\CMakeTmp\cmTC_10bfe.exe
file: C:\Work\tmp\pack\zlib-1.3\build_zlib_1.3_MinGW11.2.0_Debug\CMakeFiles\CMakeTmp\cmTC_4a1df.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://go.microsoft.com/fwlink/?linkid=142185&amp;amp;name=Trojan:Win32/Tiggre%21pz&amp;amp;threatid=2147896662" rel="nofollow"&gt;https://go.microsoft.com/fwlink/?linkid=142185&amp;amp;name=Trojan:Win32/Tiggre!pz&amp;amp;threatid=2147896662&lt;/a&gt;
&lt;img alt="error" class="embedded_image" rel="noreferrer" src="https://s1.locimg.com/2023/12/14/31143fd62503b.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;CMake&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;-- The C compiler identification is GNU 11.2.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Check for working C compiler: C:/Qt/Tools/mingw1120_64/bin/gcc.exe
-- Check for working C compiler: C:/Qt/Tools/mingw1120_64/bin/gcc.exe - works
-- Detecting C compile features
-- Detecting C compile features - done
-- Looking for sys/types.h
-- Looking for sys/types.h - found
-- Looking for stdint.h
-- Looking for stdint.h - found
-- Looking for stddef.h
-- Looking for stddef.h - found
-- Check size of off64_t
CMake Error at C:/Qt/Tools/CMake_64/share/cmake-3.24/Modules/CheckTypeSize.cmake:146 (try_compile):
  Cannot copy output executable

    'C:/Work/tmp/pack/zlib-1.3/build_zlib_1.3_MinGW11.2.0_Debug/CMakeFiles/CMakeTmp/cmTC_8af1e.exe'

  to destination specified by COPY_FILE:

    'C:/Work/tmp/pack/zlib-1.3/build_zlib_1.3_MinGW11.2.0_Debug/CMakeFiles/CheckTypeSize/OFF64_T.bin'

Call Stack (most recent call first):
  C:/Qt/Tools/CMake_64/share/cmake-3.24/Modules/CheckTypeSize.cmake:277 (__check_type_size_impl)
  CMakeLists.txt:40 (check_type_size)


-- Looking for fseeko
-- Looking for fseeko - found
-- Looking for unistd.h
-- Looking for unistd.h - found
-- Configuring incomplete, errors occurred!
See also "C:/Work/tmp/pack/zlib-1.3/build_zlib_1.3_MinGW11.2.0_Debug/CMakeFiles/CMakeOutput.log".
See also "C:/Work/tmp/pack/zlib-1.3/build_zlib_1.3_MinGW11.2.0_Debug/CMakeFiles/CMakeError.log".
&lt;/code&gt;&lt;/pre&gt;</description><pubDate>Thu, 14 Dec 2023 15:27:46 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000517#reply1</guid></item><item><title>[分享创造] 写了一个 B 站的油猴脚本，可以在侧边显示视频字幕</title><link>https://www.v2ex.com/t/1000516#reply0</link><description>&lt;p&gt;&lt;a href="https://greasyfork.org/scripts/482165" rel="nofollow"&gt;https://greasyfork.org/scripts/482165&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;效果图：
&lt;a href="https://imgur.com/FhvfDBT" rel="nofollow"&gt;https://imgur.com/FhvfDBT&lt;/a&gt;&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 15:23:41 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000516#reply0</guid></item><item><title>[生活] 用一个卡牌游戏来解释你为什么无法坚持交易的一致性</title><link>https://www.v2ex.com/t/1000515#reply0</link><description>&lt;p&gt;游戏目标：从一副特殊的牌中随机抽取一张牌，根据抽到的牌赢得奖金或扣除一定金额。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;初始本金：假设玩家开始时有 100 元。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牌组构成及规则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;牌组：包含四种牌，每种牌的数量和概率如下：&lt;/li&gt;
&lt;li&gt;梅花 A：占牌组的 45%，抽到时&lt;strong&gt;损失 1 元&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;梅花 2：占牌组的 25%，抽到时&lt;strong&gt;损失 2 元&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;红桃 3：占牌组的 20%，抽到时&lt;strong&gt;赢得 3 元&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;大王：占牌组的 10%，抽到时&lt;strong&gt;赢得 5 元&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 python 实现这个游戏&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import random

def play_card_game(starting_money=100, num_draws=10):
    # 定义牌组
    deck = ['梅花 A'] * 45 + ['梅花 2'] * 25 + ['红桃 3'] * 20 + ['大王'] * 10
    money_map = {
        '梅花 A': -1,
        '梅花 2': -2,
        '红桃 3': +3,
        '大王': +5,
    }

    # 初始本金
    money = starting_money
    # 模拟抽牌
    for _ in range(num_draws):
        card = random.choice(deck)
        if card == '梅花 A':
            money -= 1
        elif card == '梅花 2':
            money -= 2
        elif card == '红桃 3':
            money += 3
        elif card == '大王':
            money += 5

        # 打印结果
        print(f"抽到的牌: {card}, 当前本金: {money}, 本次{money_map[card]}")

    return money

# 模拟游戏
final_money = play_card_game(num_draws=1000)
print('本金=100 ，抽牌 1000 次，最终余额=',final_money)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;假设抽牌 1000 次， 实际返回：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本金=100 ，抽牌 1000 次，最终余额= 270&lt;/li&gt;
&lt;li&gt;即使最终的结果是正期望，也就是正收益，但是查看执行过程会发现&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;抽到的牌: 梅花 A, 当前本金: 205, 本次-1
抽到的牌: 梅花 A, 当前本金: 204, 本次-1
抽到的牌: 梅花 A, 当前本金: 203, 本次-1
抽到的牌: 梅花 A, 当前本金: 202, 本次-1
抽到的牌: 梅花 2, 当前本金: 200, 本次-2
抽到的牌: 梅花 A, 当前本金: 199, 本次-1
抽到的牌: 红桃 3, 当前本金: 202, 本次 3
抽到的牌: 大王, 当前本金: 207, 本次 5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;中间会出现连续 7 次的止损，对应到交易中，就是你连续 7 次被打止损&lt;/strong&gt;，&lt;br /&gt;
&lt;strong&gt;很多人拿到一个屠龙策略的时候，不要说连续 7 次， 就是连续 3 次就开始质疑了&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;如果是在你连续止损的时候，大盘大涨，大多数人直接心态爆炸，直接换掉这个策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;别看了，开骂吧，A 股这个 wbcd(网吧草的)&lt;/strong&gt;&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 15:21:16 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000515#reply0</guid></item><item><title>[宽带症候群] 突然很多中国网站无法访问了，大求助~</title><link>https://www.v2ex.com/t/1000514#reply18</link><description>&lt;p&gt;我在海外地区，大概是从昨天上午开始，很多网站和服务无法使用，尝试去 Ping 和 Tracert 了下，结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic" class="embedded_image" rel="noreferrer" src="https://i2.100024.xyz/2023/12/14/125jama.webp" /&gt;&lt;/p&gt;
&lt;p&gt;比较奇怪的是，换成手机移动网络就是正常的。
目前无法访问的网站不限于豆瓣、1688 ，还有一些大陆地区的 BBS 等。&lt;/p&gt;
&lt;p&gt;这是本地运营商的锅吗，还是大陆地区的限制？&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 15:08:47 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000514#reply18</guid></item><item><title>[问与答] 黄鱼社区一堆千元左右的 JMGO N1 Ultra，这是什么情况有人知道么？</title><link>https://www.v2ex.com/t/1000513#reply1</link><description>&lt;p&gt;京东售价 6K 多的商品，在小黄鱼社区里几乎清一色的千元左右，甚至跌破千元的 99 新，这是什么套路么？&lt;/p&gt;
&lt;p&gt;一直想买一台，但实在太贵，这个价格没坑的话真想入一台啊，但那个社区水深，不敢随便下手。&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 15:03:58 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000513#reply1</guid></item><item><title>[旅行] 春节冬天去四川过冬是好的选择吗？</title><link>https://www.v2ex.com/t/1000512#reply10</link><description>&lt;p&gt;去四川主要原因是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这么个美食之都从来还没去过.&lt;/li&gt;
&lt;li&gt;听说有些地方也是四季如春，没有严冬。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;江浙的冬天太冷了，阴冷。三亚肯定是人满为患。
想找个人没那么多的，美食和美景都有的地方。&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 14:55:56 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000512#reply10</guid></item><item><title>[分享发现] IOS 段 GPT 4.0 开放啦！</title><link>https://www.v2ex.com/t/1000511#reply1</link><description></description><pubDate>Thu, 14 Dec 2023 14:55:05 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000511#reply1</guid></item><item><title>[前端开发] 新的 Lint 工具 oxlint 发布了，比 ESLint 快 50 倍</title><link>https://www.v2ex.com/t/1000510#reply0</link><description>&lt;p&gt;英文原文： &lt;a href="https://oxc-project.github.io/blog/2023-12-12-announcing-oxlint.html" rel="nofollow"&gt;https://oxc-project.github.io/blog/2023-12-12-announcing-oxlint.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;告诉大家一个好消息，&lt;a href="https://www.npmjs.com/package/oxlint" rel="nofollow"&gt;OxLint&lt;/a&gt; 现在正式发布了！可能有些同学不了解，简单介绍一下，它和 ESLint 一样，是一个 JavaScript 代码检查工具，只是它不需要任何复杂的配置，就能帮助我们捕捉错误或无用代码。它使用 Rust 编写，速度非常地快，和 ESLint 对比起来，大概快 50 ~ 100 倍。&lt;/p&gt;
&lt;p&gt;尤大也惊叹它的速度之快：&lt;/p&gt;
&lt;p&gt;&lt;img alt="CleanShot 2023-12-14 at 21.16.26@2x.png" class="embedded_image" rel="noreferrer" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cadbee3527e4c689409d96610903ada%7Etplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1194&amp;amp;h=1404&amp;amp;s=386702&amp;amp;e=png&amp;amp;b=000000" /&gt;&lt;/p&gt;
&lt;p&gt;放个图给大家感受一下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="CleanShot 2023-12-14 at 20.48.05@2x.png" class="embedded_image" rel="noreferrer" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cec792449d0d4275a570874477c2456e%7Etplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1720&amp;amp;h=1294&amp;amp;s=87804&amp;amp;e=png&amp;amp;b=ffffff" /&gt;&lt;/p&gt;
&lt;p&gt;更详细的性能对比请前往 &lt;a href="https://oxc-project.github.io/docs/guide/usage/linter.html" rel="nofollow"&gt;bench-javascript-linter&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;如何使用&lt;/h2&gt;
&lt;p&gt;OxLint&lt;strong&gt;并非旨在完全取代 ESLint&lt;/strong&gt;，毕竟 ESLint 生态已经很完善了，有些时候我们并不关注它的性能问题，但 当 ESLint 的速度成为工作流程瓶颈时，可以把它当做一个增强工具。&lt;/p&gt;
&lt;p&gt;比如有些项目会在 lint-staged 或者 CI 设置运行 ESLint ，如果有一个大项目本来在 lint-staged 阶段要花费 10 秒，现在就连 1 秒都不到，连给你接水摸鱼的时间都没了（狗头保命）。&lt;/p&gt;
&lt;p&gt;说了这些，我们看看怎么用。要在 JavaScript / TypeScript 代码库中测试 OxLint ，只需在存储库的根目录下执行以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sh"&gt;npx oxlint@latest # npm
pnpm dlx oxlint@latest # pnpm
yarn dlx oxlint@latest # yarn
bunx oxlint@latest # bun
deno run oxlint@latest # deno
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果有报错，命令行就会抛出详细的警告。同时，我们也有 VSCode 插件，在插件市场搜索 oxc 就可以搜到。&lt;/p&gt;
&lt;p&gt;更多内容，请阅读我们的 &lt;a href="https://oxc-project.github.io/docs/guide/usage/linter.html" rel="nofollow"&gt;安装指南&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;设计&lt;/h2&gt;
&lt;h3&gt;1. 比 ESLint 快 50-100 倍&lt;/h3&gt;
&lt;p&gt;在实际场景中，Shopify 告称他们的原本需要运行 75 分钟 ESLint ，现在仅需 10 秒。&lt;/p&gt;
&lt;p&gt;这是来自 Jason Miller ，Shopify DX 和 Preact 作者的消息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;oxlint 对我们来说是一个巨大的胜利。我们以前的 lint 设置需要运行 75 分钟，因此我们在 CI 中分配了 40 多个工作程序。&lt;/p&gt;
&lt;p&gt;相比之下，oxlint 在单个工作程序上对相同代码库的 lint 大约需要 10 秒钟，而且输出更易于解释。&lt;/p&gt;
&lt;p&gt;当我们迁移时，甚至发现了一些旧设置中隐藏或跳过的几个错误！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OXlint 专门为性能设计，在其中，利用 Rust 和并行处理是其中的关键因素。&lt;/p&gt;
&lt;h3&gt;2. 为正确性进行代码检查&lt;/h3&gt;
&lt;p&gt;OxLint 默认识别错误、冗余或混乱的代码 — 优先考虑正确性而不是一些吹毛求疵的规则（分类为 &lt;code&gt;perf&lt;/code&gt;、&lt;code&gt;suspicious&lt;/code&gt;、&lt;code&gt;pedantic&lt;/code&gt; 或 &lt;code&gt;style&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;它的分类借鉴自了 &lt;code&gt;clippy&lt;/code&gt; 的&lt;a href="https://github.com/rust-lang/rust-clippy" rel="nofollow"&gt;分类规则&lt;/a&gt;。初次见，可能会觉得很不适应，但是一旦熟悉，就会觉得这样的的分类是如此的方便，好用！&lt;/p&gt;
&lt;p&gt;运行默认模式（不加任何参数，直接 &lt;code&gt;npx oxlint&lt;/code&gt;）识别出来的错误，一般都是需要修正的错误。&lt;/p&gt;
&lt;h3&gt;3. 使用便捷&lt;/h3&gt;
&lt;p&gt;现在配置新的 JavaScript / TypeScript 代码库变得越来越复杂。遇到兼容性问题的可能性很高，可能导致数小时的时间浪费。这就是为什么我们设计 OXLint 以零配置的方式出现的原因。别说配置文件了，Node.js 也不是必需的！&lt;/p&gt;
&lt;p&gt;我们工具的大多数调整可以通过命令行完成，目前兼容 ESLint 的配置文件的工作也在进行中。&lt;/p&gt;
&lt;h3&gt;4. 增强诊断&lt;/h3&gt;
&lt;p&gt;理解 lint 工具的信息可能具有挑战性。Oxlint 旨在通过定位根本原因并提供有用的信息来简化这一过程，也就是说，我们的报错信息比较容易读懂。看一个例子：&lt;/p&gt;
&lt;p&gt;如果我们想在 &lt;a href="https://github.com/microsoft/vscode" rel="nofollow"&gt;vscode&lt;/a&gt;中运行一下性能相关的 lint 规则： &lt;code&gt;oxlint -D perf&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;得到的结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="image.png" class="embedded_image" rel="noreferrer" src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/80bf47bfb5a54cdb9b495bcd651eebbd%7Etplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2216&amp;amp;h=412&amp;amp;s=104977&amp;amp;e=png&amp;amp;b=010101" /&gt;&lt;/p&gt;
&lt;h3&gt;5. 统一的规则&lt;/h3&gt;
&lt;p&gt;Oxlint 目前尚未提供插件系统，但我们正在积极整合来自流行插件如 TypeScript 、React 、Jest 、Unicorn 、JSX-a11y 和 Import 的规则。&lt;/p&gt;
&lt;p&gt;我们认识到在 JavaScript 生态系统中插件的重要性，并且也正在研究基于 DSL 的插件系统。&lt;/p&gt;
&lt;p&gt;然而，你可能会喜欢一个独立的 lint 工具 — 无需管理一系列插件依赖项，不想&lt;a href="https://github.com/antfu/eslint-ts-patch" rel="nofollow"&gt;解决兼容性问题&lt;/a&gt;、或者&lt;a href="https://github.com/import-js/eslint-plugin-import/pull/2504#issuecomment-1191057877" rel="nofollow"&gt;由于版本限制而求助于分支插件&lt;/a&gt;。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;感谢大家阅读到这，希望大家可以使用 OxLint 获得更愉悦的开发体验，也预祝大家即将到来的元旦假期快乐！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要开始使用，请查阅&lt;a href="https://oxc-project.github.io/docs/guide/usage/linter.html" rel="nofollow"&gt;安装指南&lt;/a&gt;，或者&lt;a href="https://oxc-project.github.io/docs/learn/parser_in_rust/intro.html" rel="nofollow"&gt;了解更多关于 oxc 项目&lt;/a&gt;的信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们项目还有很多好玩的东西，欢迎来玩 👉 &lt;a href="https://oxc-project.github.io/" rel="nofollow"&gt;https://oxc-project.github.io/&lt;/a&gt;&lt;/p&gt;</description><pubDate>Thu, 14 Dec 2023 14:49:47 GMT</pubDate><guid isPermaLink="true">https://www.v2ex.com/t/1000510#reply0</guid></item></channel></rss>